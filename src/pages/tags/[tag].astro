---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
/**
 *  La función getStaticPaths devuelve un array de rutas de páginas,
 * y todas las páginas en esas rutas
 * usarán la misma plantilla definida en el fichero.
 */

export async function getStaticPaths() {
  const allPosts = await Astro.glob("../posts/*.md");

  /**
   * Recorre cada entrada Markdown, una a una, y combina cada array de etiquetas en un único array más grande.
   * A continuación, crea un nuevo Set a partir de todas las etiquetas individuales
   * que ha encontrado (para ignorar los valores repetidos).
   * Finalmente, convierte ese conjunto en un array (sin duplicaciones), que puedes usar para mostrar una lista de etiquetas en tu página.
   */
  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];
  // return [
  //   // Las etiquetas están retornadas de manera estatica y no dinámica
  //   { params: { tag: "astro" }, props: { posts: allPosts } },
  //   { params: { tag: "éxitos" }, props: { posts: allPosts } },
  //   { params: { tag: "comunidad" }, props: { posts: allPosts } },
  //   { params: { tag: "bloguear" }, props: { posts: allPosts } },
  //   { params: { tag: "contratiempos" }, props: { posts: allPosts } },
  //   { params: { tag: "aprender en público" }, props: { posts: allPosts } },
  // ];

  // Recorre las etiquetas de mis archivos markdown uno uno
  return uniqueTags.map((tag) => {
    // Filtrar los post de acuerdo a la etiqueta que solicita el usuario
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
// const filteredPosts = posts.filter((post) =>
//   post.frontmatter.tags?.includes(tag)
// );
---

<BaseLayout pageTitle={tag}>
  <p>Entradas etiquetadas con {tag}</p>
  <ul>
    {
      // Forma estática
      // filteredPosts.map((post) => (
      //   <BlogPost
      //     url={post.url}
      //     title={post.frontmatter.title}
      //     description={post.frontmatter.description}
      //   />
      // ))

      // Forma dinámica
      posts.map((post) => (
        <BlogPost
          url={post.url}
          title={post.frontmatter.title}
          description={post.frontmatter.description}
        />
      ))
    }
  </ul>
</BaseLayout>

<!-- 
  Si necesitas información para construir las rutas de la página, escríbela dentro de getStaticPaths().
  Para recibir información en la plantilla HTML de una ruta de página, escríbela fuera de getStaticPaths().
 -->
